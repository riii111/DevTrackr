name: Rust CI

# バックエンドのRustコードの品質チェックを行うワークフロー
# - コードフォーマットのチェック
# - Clippyによる静的解析
# - セキュリティ監査
# - ビルドテスト（Ubuntu/Windows）
# TODO: テストの実行

on:
  push:
    branches: [develop]
    paths:
      - "backend/**"
  pull_request:
    branches: [develop]
    paths:
      - "backend/**"

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: "-D warnings"

jobs:
  check:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            name: Ubuntu
          - os: windows-latest
            name: Windows

    name: Check on ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          path: backend
          command: fmt
          args: --all -- --check

      - name: Clippy check
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: Security audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build check
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
