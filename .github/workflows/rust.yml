name: Rust CI

# バックエンドのRustコードの品質チェックを行うワークフロー
# - コードフォーマットのチェック
# - Clippyによる静的解析
# - セキュリティ監査
# - ビルドテスト（Ubuntu/Windows）
# TODO: テストの実行

on:
  pull_request:
    branches:
      - develop
      - master
    paths:
      - "backend/**"

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: "-D warnings"

jobs:
  check:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            name: Ubuntu
          - os: windows-latest
            name: Windows

    name: Check on ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            backend/.cargo/registry
            backend/.cargo/git
            backend/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('backend/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Clippy check
        run: cargo clippy -- -D warnings

      - name: Security audit
        run: cargo audit

      - name: Build check
        run: cargo build --release
